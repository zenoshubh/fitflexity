services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    env_file: .env
    volumes:
      - /client/node_modules
      - /client/.next
    command: bun run dev
    networks:
      - fitflexity
    depends_on:
      - server
    ports:
      - "3000:3000"
    # Docker watch configuration for live reloading (Docker Desktop specific)
    develop:
      watch:
        - action: sync
          path: ./client/src
          target: /client/src
        - action: rebuild
          path: ./client/package.json
          target: /client/package.json
        - action: rebuild
          path: ./client/bun.lock
          target: /client/bun.lock
        - action: rebuild
          path: ./client/Dockerfile.dev
          target: /client/Dockerfile.dev

  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    env_file: .env.server
    volumes:
      - /server/node_modules
    networks:
      - fitflexity
    depends_on:
      - postgres
      - valkey
      - qdrant
    ports:
      - "8000:8000"
    # Docker watch configuration for live reloading (Docker Desktop specific)
    develop:
      watch:
        - action: sync
          path: ./server/src
          target: /server/src
        - action: rebuild
          path: ./server/package.json
          target: /server/package.json
        - action: rebuild
          path: ./server/bun.lockb
          target: /server/bun.lockb
        - action: rebuild
          path: ./server/Dockerfile.dev
          target: /server/Dockerfile.dev

  worker:
    build:
      context: ./worker
      dockerfile: Dockerfile.dev
    container_name: fitflexity-worker
    volumes:
      - /worker/node_modules
    restart: unless-stopped
    env_file: .env.worker
    networks:
      - fitflexity
    depends_on:
      - server
      - qdrant
    develop:
      watch:
        - action: sync
          path: ./worker/src
          target: /worker/src
        - action: rebuild
          path: ./worker/package.json
          target: /worker/package.json
        - action: rebuild
          path: ./worker/bun.lock
          target: /worker/bun.lock
        - action: rebuild
          path: ./worker/Dockerfile.dev
          target: /worker/Dockerfile.dev

  migrator:
    build:
      context: ./server # Backend ke Dockerfile ko use karega
      dockerfile: Dockerfile.migrator
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      - postgres
    networks:
      - fitflexity
    restart: "no"

  postgres:
    container_name: fitflexity-db
    image: postgres:17.5-alpine3.22
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - fitflexity
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - fitflexity
    depends_on:
      - postgres

  valkey:
    image: valkey/valkey:8.1.3-alpine3.22
    container_name: fitflexity-valkey
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    networks:
      - fitflexity

  qdrant:
    image: qdrant/qdrant:latest
    container_name: fitflexity-qdrant
    restart: always
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - fitflexity

networks:
  fitflexity:
    driver: bridge

volumes:
  postgres_data:
  valkey_data:
  qdrant_data:
